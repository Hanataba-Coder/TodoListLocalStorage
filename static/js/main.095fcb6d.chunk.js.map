{"version":3,"sources":["components/Aux/index.js","logo.svg","components/TodoListMain/styled.js","components/CheckboxTodoList/styled.js","components/CheckboxTodoList/index.js","components/TodoListMain/components/ListTodo/styled.js","components/TodoListMain/components/ListTodo/index.js","components/TodoListMain/index.js","screens/TodoList/index.js","components/HistoryMain/styled.js","components/HistoryMain/components/HistoryList/styled.js","components/HistoryMain/components/HistoryList/index.js","components/HistoryMain/index.js","screens/History/index.js","App.js","reportWebVitals.js","index.js"],"names":["aux","props","children","TodoListContainer","styled","div","TodoListWrapper","ListBoxWrapper","percent","span","TopOption","ul","li","input","attrs","type","TitleWrapper","ListInputWrap","AddListInput","TextareaAutosize","checked","ListInputSearch","FlexRow","NavigatorWrap","CheckboxContainer","Checkbox","className","ListWrapper","List","ListInput","InlineFlex","readonly","SaveBtn","button","CancelBtn","ListTodo","TodoList","trigger","HistoryList","JSON","parse","localStorage","getItem","useState","Text","setText","Edit","setEdit","useEffect","addNewHistory","text","newHistory","setItem","stringify","CancelEdit","map","e","style","width","id","completed","onChange","onClick","ToggleChecked","find","newTodo","moment","format","handlerChecked","disabled","defaultValue","title","value","target","editTodo","editedTodo","EditedTodo","newEditedTodo","handlerEdit","cursor","color","deletedTodo","filter","handlerDeleteTodo","TodoListMain","triggerState","setTriggerState","NewTodo","setNewTodo","searchTodo","setSearchTodo","to","placeholder","minRows","onKeyDown","event","key","preventDefault","Math","floor","random","newDataTodo","includes","Aux","Container","Wrapper","Lists","HistoryMain","HistoryLists","marginRight","History","App","exact","path","component","TodoListScreen","HistoryScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.095fcb6d.chunk.js","sourcesContent":["const aux = (props) => props.children;\n\nexport default aux;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import styled from 'styled-components';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nexport const TodoListContainer = styled.div`\n  position: relative;\n  z-index: 10;\n  height: 100vh;\n  padding: 0 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media only screen and (max-width: 600px) {\n    padding: 0;\n  }\n`;\nexport const TodoListWrapper = styled.div`\n  position: relative;\n  max-width: 1100px;\n  width: 60vw;\n  max-height: 1100px;\n  height: 70vh;\n  padding: 50px;\n  background: #f5f5f5;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  transition: 0.3s;\n  border-radius: 25px;\n  overflow: hidden;\n\n  @media only screen and (max-width: 600px) {\n    padding: 20px;\n    padding-top: 40px;\n    max-width: 100%;\n    width: 100%;\n    max-height: 100%;\n    height: 100%;\n  }\n`;\nexport const TodoListGridBox = styled.div`\n  display: grid;\n  grid-template-rows: 3fr 1fr 10fr;\n  grid-gap: 10px;\n  height: 100%;\n\n  @media only screen and (max-width: 600px) {\n    height: 100%;\n  }\n`;\n\nexport const ProgessBarBoxWrapper = styled.div`\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  transition: 0.3s;\n  background: #e07c7c;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  font-weight: bold;\n  padding: 30px;\n  border-radius: 30px;\n\n  @media only screen and (max-width: 600px) {\n    padding: 10px;\n  }\n`;\n\nexport const ProgessBarWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 10px;\n  grid-auto-rows: minmax(1.3rem, auto);\n  width: calc(100%);\n`;\n\nexport const ProgressBar = styled.div`\n  border-radius: 10px;\n  border: transparent;\n  position: relative;\n  background: #3b3b3b;\n  width: 100%;\n  height: 15px;\n\n  &::before {\n    position: absolute;\n    content: '';\n    text-align: center;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    width: ${({ percent }) => (percent ? percent : '0')}%;\n    background: #fff;\n    border-radius: 10px;\n  }\n\n  &::after {\n    position: absolute;\n    content: '';\n    top: 0;\n    left: 105%;\n  }\n`;\n\nexport const ProgessBarTextWrapper = styled.div`\n  font-size: 30px;\n`;\n\nexport const ProgressTextComplate = styled.span`\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nexport const ListBoxWrapper = styled.div`\n  background: #f5f5f5;\n  border-radius: 10px;\n  padding: 0px;\n  overflow: auto;\n  height: 80%;\n`;\n\nexport const ListWrapper = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  overflow: auto;\n  height: 80%;\n`;\n\nexport const List = styled.li`\n    position: relative;\n    display: flex;\n    align-items: center;\n    padding: 10px 30px;\n    background: #fff;\n    border-radius: 20px;\n    margin 10px 0px;\n`;\n\nexport const SettingIcon = styled.span`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-65%);\n  right: 10px;\n  font-weight: bold;\n`;\nexport const Checkbox = styled.input.attrs({\n  type: 'checkbox',\n})`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  left: 10px;\n\n  &:checked {\n    background: red;\n  }\n`;\nexport const TopOption = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const TitleWrapper = styled.div`\n  font-weight: bold;\n  font-size: 20px;\n`;\n\nexport const ListInput = styled.input`\n  outline: none;\n  border: none;\n`;\n\nexport const ListInputWrap = styled.li`\n    position: relative;\n    display: flex;\n    align-items: center;\n    padding: 10px 30px;\n    background: #fff;\n    border-radius: 20px;\n    margin 10px 0px;\n    justify-content: space-between;\n`;\n\nexport const AddListInput = styled(TextareaAutosize)`\n  padding-top: 7px;\n  resize: none;\n  outline: none;\n  border: none;\n  width: 100%;\n  overflow: hidden;\n  min-height: 30px;\n  background: #fff;\n  text-decoration: ${({ checked }) => (checked ? 'line-through' : 'none')};\n`;\n\nexport const ListInputSearch = styled.input`\n  outline: none;\n  border: none;\n  width: 100%;\n  overflow: hidden;\n  min-height: 30px;\n  background: #fff;\n  text-decoration: ${({ checked }) => (checked ? 'line-through' : 'none')};\n`;\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nexport const NavigatorWrap = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  font-weight: bold;\n\n  & a {\n    text-decoration: none;\n    background: linear-gradient(\n      45deg,\n      #405de6,\n      #5851db,\n      #833ab4,\n      #c13584,\n      #e1306c,\n      #fd1d1d\n    );\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CheckboxContainer = styled.div`\n  display: block;\n  position: relative;\n  padding-left: 35px;\n  margin-bottom: 20px;\n  cursor: pointer;\n  font-size: 22px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n\n  & input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 0;\n    width: 0;\n  }\n\n  .checkmark {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 20px;\n    width: 20px;\n    background-color: #fff;\n    border: 2px solid #585292;\n    border-radius: 5px;\n\n    /* Create the checkmark/indicator (hidden when not checked) */\n    &:after {\n      content: '';\n      position: absolute;\n      display: none;\n    }\n  }\n\n  /* On mouse-over, add a grey background color */\n  &:hover input ~ .checkmark {\n    background-color: #585292;\n  }\n\n  /* When the checkbox is checked, add a blue background */\n  & input:checked ~ .checkmark {\n    background-color: #585292;\n  }\n\n  /* Show the checkmark when checked */\n  & input:checked ~ .checkmark:after {\n    display: block;\n  }\n\n  /* Style the checkmark/indicator */\n  & .checkmark:after {\n    left: 2%;\n    top: 26%;\n    width: 4px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg) translateY(-50%);\n    -ms-transform: rotate(45deg) translateY(-50%);\n    transform: rotate(45deg) translateY(-50%);\n  }\n`;\n","import React from 'react';\nimport { CheckboxContainer } from './styled';\n\nconst Checkbox = ({ className, checked, ...props }) => (\n  <CheckboxContainer {...props}>\n    <input type=\"checkbox\" checked={checked} {...props} />\n    <span className=\"checkmark\"></span>\n  </CheckboxContainer>\n);\n\nexport default Checkbox;\n","import styled from 'styled-components';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nexport const ListWrapper = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  overflow: auto;\n  height: 100%;\n`;\n\nexport const List = styled.li`\n    position: relative;\n    display: flex;\n    align-items: center;\n    padding: 10px 30px;\n    background: #fff;\n    border-radius: 20px;\n    margin 10px 0px;\n    justify-content: space-between;\n`;\n\nexport const SettingIcon = styled.span`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-65%);\n  right: 10px;\n  font-weight: bold;\n`;\n\nexport const ListInput = styled(TextareaAutosize)`\n  padding-top: 7px;\n  resize: none;\n  outline: none;\n  border: none;\n  width: 100%;\n  overflow: hidden;\n  min-height: 30px;\n  background: #fff;\n  text-decoration: ${({ checked }) => (checked ? 'line-through' : 'none')};\n`;\n\nexport const TextContentEditable = styled.div.attrs(() => ({}))`\n  outline: none;\n  border: none;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.8);\n  width: 80%;\n  text-decoration: ${({ checked }) => (checked ? 'line-through' : 'none')};\n  -webkit-user-modify: ${({ readonly }) => readonly && 'read-only'};\n`;\n\nexport const InlineFlex = styled.div`\n  display: inline-flex;\n  gap: 10px;\n  align-items: center;\n`;\n\nexport const SaveBtn = styled.button`\n  outline: none;\n  background: #585292;\n  color: #fff;\n  border-radius: 20px;\n  border: none;\n  padding: 10px;\n  cursor: pointer;\n`;\n\nexport const CancelBtn = styled.button`\n  outline: none;\n  background: #e07c7c;\n  color: #fff;\n  border-radius: 20px;\n  border: none;\n  padding: 10px;\n  cursor: pointer;\n`;\n","import React, { useState, useEffect } from 'react';\nimport Checkbox from '../../../../components/CheckboxTodoList';\nimport {\n  ListWrapper,\n  List,\n  ListInput,\n  InlineFlex,\n  SaveBtn,\n  CancelBtn,\n} from './styled';\nimport moment from 'moment';\n\nconst ListTodo = ({ TodoList, trigger }) => {\n  const HistoryList = JSON.parse(localStorage.getItem('history'));\n  const [Text, setText] = useState('');\n  const [Edit, setEdit] = useState('');\n\n  useEffect(() => {\n    setEdit('');\n  }, [TodoList]);\n\n  const toggleEdit = (id, title) => {\n    setText(title);\n    setEdit(id);\n  };\n\n  const addNewHistory = (text) => {\n    const newHistory = [text, ...HistoryList];\n    localStorage.setItem('history', JSON.stringify(newHistory));\n  };\n\n  //Edit Todo\n  const handlerEdit = (editTodo) => {\n    const editedTodo = {\n      id: editTodo.id,\n      completed: editTodo.completed,\n      title: Text,\n    };\n\n    const EditedTodo = TodoList.find((e) => e.id === editedTodo.id);\n    EditedTodo.title = editedTodo.title;\n\n    const newEditedTodo = TodoList.map((e) =>\n      e.id === editedTodo.id ? EditedTodo : e\n    );\n\n    localStorage.setItem('todolist', JSON.stringify(newEditedTodo));\n\n    addNewHistory(\n      `Edit - id: ${editTodo.id}  ${moment().format('DD/MM/YYYY, hh:mm:ss')}`\n    );\n\n    trigger();\n  };\n\n  //Delete Todo\n  const handlerDeleteTodo = (id) => {\n    const deletedTodo = TodoList.filter((e) => e.id !== id);\n    localStorage.setItem('todolist', JSON.stringify(deletedTodo));\n\n    addNewHistory(\n      `Delete - id: ${id}  ${moment().format('DD/MM/YYYY, hh:mm:ss')}`\n    );\n\n    trigger();\n  };\n\n  //Toggle Check\n  const handlerChecked = (id) => {\n    const ToggleChecked = TodoList.find((e) => e.id === id);\n    ToggleChecked.completed = !ToggleChecked.completed;\n\n    const newTodo = TodoList.map((e) => (e.id === id ? ToggleChecked : e));\n\n    localStorage.setItem('todolist', JSON.stringify(newTodo));\n\n    addNewHistory(\n      `Change status - id: ${id}  ${moment().format('DD/MM/YYYY, hh:mm:ss')}`\n    );\n\n    trigger();\n  };\n\n  //Cancel Edit\n  const CancelEdit = () => {\n    setEdit('');\n  };\n\n  return (\n    <ListWrapper>\n      {\n        //List\n      }\n      {TodoList &&\n        TodoList.map((e) => (\n          <List key={e.id}>\n            <InlineFlex style={{ width: '100%' }}>\n              {Edit !== e.id && (\n                <Checkbox\n                  checked={e.completed}\n                  onChange={() => {}}\n                  onClick={() => handlerChecked(e.id)}\n                />\n              )}\n              {\n                <ListInput\n                  disabled={Edit !== e.id}\n                  defaultValue={e.title}\n                  value={Edit === e.id ? null : e.title}\n                  checked={e.completed}\n                  onChange={(e) => {\n                    setText(e.target.value);\n                  }}\n                />\n              }\n            </InlineFlex>\n\n            {\n              //กรณี Edit\n            }\n            {Edit === e.id && (\n              <InlineFlex>\n                <SaveBtn onClick={() => handlerEdit(e)}>{'SAVE'}</SaveBtn>\n                <CancelBtn onClick={CancelEdit}>Cancel</CancelBtn>\n              </InlineFlex>\n            )}\n            {\n              //กรณีไม่ Edit\n            }\n            {Edit !== e.id && (\n              <InlineFlex>\n                <i\n                  style={{ cursor: 'pointer', color: 'rgba(0,0,0,0.5)' }}\n                  className=\"far fa-edit\"\n                  onClick={() => toggleEdit(e.id, e.title)}\n                ></i>\n                <i\n                  style={{ cursor: 'pointer', color: '#e07c7c' }}\n                  className=\"far fa-trash-alt\"\n                  onClick={() => handlerDeleteTodo(e.id)}\n                ></i>\n              </InlineFlex>\n            )}\n          </List>\n        ))}\n    </ListWrapper>\n  );\n};\n\nexport default ListTodo;\n","import React, { useState } from 'react';\nimport {\n  TodoListContainer,\n  TodoListWrapper,\n  ListBoxWrapper,\n  TopOption,\n  TitleWrapper,\n  ListInputWrap,\n  AddListInput,\n  FlexRow,\n  ListInputSearch,\n  NavigatorWrap,\n} from './styled';\nimport ListTodo from './components/ListTodo';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nconst TodoListMain = () => {\n  const TodoList = JSON.parse(localStorage.getItem('todolist'));\n  const HistoryList = JSON.parse(localStorage.getItem('history'));\n  const [triggerState, setTriggerState] = useState(true);\n  const [NewTodo, setNewTodo] = useState('');\n  const [searchTodo, setSearchTodo] = useState('');\n\n  //Enter New Todo\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n\n      if (!NewTodo) return null;\n\n      const newTodo = {\n        id: Math.floor(Math.random() * 1000),\n        completed: false,\n        title: NewTodo,\n      };\n\n      if (!TodoList) {\n        localStorage.setItem('todolist', JSON.stringify([newTodo]));\n      } else {\n        let newDataTodo = [newTodo, ...TodoList];\n        localStorage.setItem('todolist', JSON.stringify(newDataTodo));\n      }\n\n      if (!HistoryList) {\n        localStorage.setItem(\n          'history',\n          JSON.stringify([\n            `Add - id: ${newTodo.id}, title: ${\n              newTodo.title\n            }  ${moment().format('DD/MM/YYYY, hh:mm:ss')}`,\n          ])\n        );\n      } else {\n        const newHistory = [\n          `Add - id: ${newTodo.id}, title: ${newTodo.title}  ${moment().format(\n            'DD/MM/YYYY, hh:mm:ss'\n          )}`,\n          ...HistoryList,\n        ];\n        localStorage.setItem('history', JSON.stringify(newHistory));\n      }\n\n      setNewTodo('');\n    }\n  };\n  return (\n    <TodoListContainer>\n      <TodoListWrapper>\n        <NavigatorWrap>\n          <Link to=\"/TodoListLocalStorage/history\">History</Link>\n        </NavigatorWrap>\n        <TopOption>\n          <FlexRow>\n            <TitleWrapper>Tasks</TitleWrapper>\n            {\n              //Search\n            }\n            <ListInputWrap>\n              <ListInputSearch\n                placeholder=\"Search\"\n                onChange={(e) => setSearchTodo(e.target.value)}\n                value={searchTodo}\n              />\n            </ListInputWrap>\n          </FlexRow>\n          {\n            //Input\n          }\n          <ListInputWrap style={{ width: '100%' }}>\n            <AddListInput\n              minRows={1}\n              placeholder=\"Add your todo...\"\n              onChange={(e) => setNewTodo(e.target.value)}\n              value={NewTodo}\n              onKeyDown={handleKeyDown}\n            />\n          </ListInputWrap>\n        </TopOption>\n        <ListBoxWrapper>\n          {searchTodo ? (\n            <ListTodo\n              TodoList={TodoList.filter((e) => e.title.includes(searchTodo))}\n              trigger={() => setTriggerState(!triggerState)}\n            />\n          ) : (\n            <ListTodo\n              TodoList={TodoList}\n              trigger={() => setTriggerState(!triggerState)}\n            />\n          )}\n        </ListBoxWrapper>\n      </TodoListWrapper>\n    </TodoListContainer>\n  );\n};\n\nexport default TodoListMain;\n","import React from 'react';\nimport Aux from '../../components/Aux';\nimport TodoListMain from '../../components/TodoListMain';\n\nconst TodoList = () => {\n  return (\n    <Aux>\n      <TodoListMain />\n    </Aux>\n  );\n};\n\nexport default TodoList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  z-index: 10;\n  height: 100vh;\n  padding: 0 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media only screen and (max-width: 600px) {\n    padding: 0;\n  }\n`;\nexport const Wrapper = styled.div`\n  position: relative;\n  max-width: 1100px;\n  width: 60vw;\n  max-height: 1100px;\n  height: 70vh;\n  padding: 50px;\n  background: #f5f5f5;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  transition: 0.3s;\n  border-radius: 25px;\n\n  @media only screen and (max-width: 600px) {\n    padding: 20px;\n    padding-top: 40px;\n    max-width: 100%;\n    width: 100%;\n    max-height: 100%;\n    height: 100%;\n  }\n`;\nexport const GridBox = styled.div`\n  display: grid;\n  grid-template-rows: 3fr 1fr 10fr;\n  grid-gap: 10px;\n  height: 100%;\n\n  @media only screen and (max-width: 600px) {\n    height: 100%;\n  }\n`;\n\nexport const ProgessBarBoxWrapper = styled.div`\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  transition: 0.3s;\n  background: #e07c7c;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  font-weight: bold;\n  padding: 30px;\n  border-radius: 30px;\n\n  @media only screen and (max-width: 600px) {\n    padding: 10px;\n  }\n`;\n\nexport const ProgessBarWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 10px;\n  grid-auto-rows: minmax(1.3rem, auto);\n  width: calc(100%);\n`;\n\nexport const ProgressBar = styled.div`\n  border-radius: 10px;\n  border: transparent;\n  position: relative;\n  background: #3b3b3b;\n  width: 100%;\n  height: 15px;\n\n  &::before {\n    position: absolute;\n    content: '';\n    text-align: center;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    width: ${({ percent }) => (percent ? percent : '0')}%;\n    background: #fff;\n    border-radius: 10px;\n  }\n\n  &::after {\n    position: absolute;\n    content: '';\n    top: 0;\n    left: 105%;\n  }\n`;\n\nexport const ProgessBarTextWrapper = styled.div`\n  font-size: 30px;\n`;\n\nexport const ProgressTextComplate = styled.span`\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nexport const ListBoxWrapper = styled.div`\n  background: #f5f5f5;\n  border-radius: 10px;\n  padding: 0px;\n  overflow: auto;\n  height: 100%;\n`;\n\nexport const ListWrapper = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  overflow: auto;\n  height: 80%;\n`;\n\nexport const List = styled.li`\n    position: relative;\n    display: flex;\n    align-items: center;\n    padding: 10px 30px;\n    background: #fff;\n    border-radius: 20px;\n    margin 10px 0px;\n`;\n\nexport const SettingIcon = styled.span`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-65%);\n  right: 10px;\n  font-weight: bold;\n`;\nexport const Checkbox = styled.input.attrs({\n  type: 'checkbox',\n})`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  left: 10px;\n\n  &:checked {\n    background: red;\n  }\n`;\nexport const TopOption = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const TitleWrapper = styled.div`\n  font-weight: bold;\n  font-size: 20px;\n`;\n\nexport const ListInput = styled.input`\n  outline: none;\n  border: none;\n`;\n\nexport const NavigatorWrap = styled.div`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  font-weight: bold;\n\n  & a {\n    text-decoration: none;\n    color: #000;\n  }\n`;\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n`;\n","import styled from 'styled-components';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nexport const ListWrapper = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  overflow: auto;\n  height: 100%;\n`;\n\nexport const List = styled.li`\n    position: relative;\n    display: flex;\n    align-items: center;\n    padding: 10px 30px;\n    background: #fff;\n    border-radius: 20px;\n    margin 10px 0px;\n    justify-content: space-between;\n`;\n\nexport const SettingIcon = styled.span`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-65%);\n  right: 10px;\n  font-weight: bold;\n`;\n\nexport const ListInput = styled(TextareaAutosize)`\n  padding-top: 7px;\n  resize: none;\n  outline: none;\n  border: none;\n  width: 100%;\n  overflow: hidden;\n  min-height: 30px;\n  background: #fff;\n  text-decoration: ${({ checked }) => (checked ? 'line-through' : 'none')};\n`;\n\nexport const TextContentEditable = styled.div.attrs(() => ({}))`\n  outline: none;\n  border: none;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.8);\n  width: 80%;\n  text-decoration: ${({ checked }) => (checked ? 'line-through' : 'none')};\n  -webkit-user-modify: ${({ readonly }) => readonly && 'read-only'};\n`;\n\nexport const InlineFlex = styled.div`\n  display: inline-flex;\n  align-items: center;\n`;\n\nexport const SaveBtn = styled.button`\n  outline: none;\n  background: #585292;\n  color: #fff;\n  border-radius: 20px;\n  border: none;\n  padding: 10px;\n  cursor: pointer;\n`;\n\nexport const CancelBtn = styled.button`\n  outline: none;\n  background: #e07c7c;\n  color: #fff;\n  border-radius: 20px;\n  border: none;\n  padding: 10px;\n  cursor: pointer;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { ListWrapper, List, ListInput, InlineFlex } from './styled';\n\nconst HistoryList = ({ Lists }) => {\n  return (\n    <ListWrapper>\n      {\n        //List\n      }\n      {Lists &&\n        Lists.map((e) => (\n          <List key={e.id}>\n            <InlineFlex style={{ width: '100%' }}>\n              <ListInput disabled={true} defaultValue={e} value={e} />\n            </InlineFlex>\n          </List>\n        ))}\n    </ListWrapper>\n  );\n};\n\nexport default HistoryList;\n","import React, { useState } from 'react';\nimport {\n  Container,\n  Wrapper,\n  ListBoxWrapper,\n  TopOption,\n  TitleWrapper,\n  NavigatorWrap,\n  FlexRow,\n} from './styled';\nimport HistoryList from './components/HistoryList';\nimport { Link } from 'react-router-dom';\n\nconst HistoryMain = () => {\n  const HistoryLists = JSON.parse(localStorage.getItem('history'));\n  const [triggerState, setTriggerState] = useState(true);\n\n  const clearHistory = () => {\n    localStorage.setItem('history', JSON.stringify([]));\n    setTriggerState(!triggerState);\n  };\n\n  return (\n    <Container>\n      <Wrapper>\n        <NavigatorWrap>\n          <Link to=\"/\">\n            <i className=\"fas fa-arrow-left\" style={{ marginRight: 5 }}></i>Todo\n          </Link>\n        </NavigatorWrap>\n        <TopOption>\n          <FlexRow>\n            <TitleWrapper>History</TitleWrapper>\n            <i\n              style={{ cursor: 'pointer', color: '#e07c7c' }}\n              className=\"fas fa-eraser\"\n              onClick={clearHistory}\n            >\n              {' '}\n              clear all\n            </i>\n          </FlexRow>\n        </TopOption>\n        <ListBoxWrapper>\n          <HistoryList Lists={HistoryLists} />\n        </ListBoxWrapper>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default HistoryMain;\n","import React from 'react';\nimport Aux from '../../components/Aux';\nimport HistoryMain from '../../components/HistoryMain';\n\nconst History = () => {\n  return (\n    <Aux>\n      <HistoryMain />\n    </Aux>\n  );\n};\n\nexport default History;\n","import logo from './logo.svg';\nimport './App.css';\nimport TodoListScreen from './screens/TodoList';\nimport HistoryScreen from './screens/History';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/TodoListLocalStorage/\" component={TodoListScreen} />\n        <Route\n          exact\n          path=\"/TodoListLocalStorage/history\"\n          component={HistoryScreen}\n        />\n        <Redirect to=\"/TodoListLocalStorage/\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}